load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "algorithm_factory.go",
        "eventhandlers.go",
        "factory.go",
        "scheduler.go",
    ],
    importpath = "k8s.io/kubernetes/pkg/scheduler",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/k8s.io/kubernetes/pkg/api/v1/pod:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/features:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/algorithm:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/algorithm/predicates:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/algorithm/priorities:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/apis/config:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/apis/config/scheme:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/apis/config/validation:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/core:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/framework/plugins:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/framework/plugins/nodelabel:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/framework/plugins/requestedtocapacityratio:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/framework/plugins/serviceaffinity:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/framework/v1alpha1:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/internal/cache:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/internal/cache/debugger:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/internal/queue:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/listers:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/metrics:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/nodeinfo/snapshot:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/volumebinder:go_default_library",
        "//vendor/k8s.io/api/core/v1:go_default_library",
        "//vendor/k8s.io/api/storage/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/api/errors:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/fields:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/runtime:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/types:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/runtime:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/sets:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/wait:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/util/feature:go_default_library",
        "//vendor/k8s.io/client-go/informers:go_default_library",
        "//vendor/k8s.io/client-go/informers/core/v1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes:go_default_library",
        "//vendor/k8s.io/client-go/listers/core/v1:go_default_library",
        "//vendor/k8s.io/client-go/listers/policy/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/listers/storage/v1:go_default_library",
        "//vendor/k8s.io/client-go/tools/cache:go_default_library",
        "//vendor/k8s.io/client-go/tools/events:go_default_library",
        "//vendor/k8s.io/klog:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "algorithm_factory_test.go",
        "eventhandlers_test.go",
        "factory_test.go",
        "scheduler_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//vendor/k8s.io/kubernetes/pkg/api/testing:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/controller/volume/scheduling:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/features:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/algorithm:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/algorithm/predicates:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/algorithm/priorities:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/apis/config:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/apis/config/scheme:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/apis/extender/v1:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/core:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/framework/plugins:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/framework/plugins/nodelabel:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/framework/plugins/serviceaffinity:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/framework/v1alpha1:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/internal/cache:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/internal/cache/fake:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/internal/queue:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/nodeinfo:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/nodeinfo/snapshot:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/volumebinder:go_default_library",
        "//vendor/k8s.io/api/core/v1:go_default_library",
        "//vendor/k8s.io/api/events/v1beta1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/api/resource:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/labels:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/runtime:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/types:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/clock:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/diff:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/sets:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/wait:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/util/feature:go_default_library",
        "//vendor/k8s.io/client-go/informers:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/fake:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/scheme:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/core/v1/fake:go_default_library",
        "//vendor/k8s.io/client-go/testing:go_default_library",
        "//vendor/k8s.io/client-go/tools/cache:go_default_library",
        "//vendor/k8s.io/client-go/tools/events:go_default_library",
        "//vendor/github.com/google/go-cmp/cmp:go_default_library",
        "//vendor/github.com/stretchr/testify/assert:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/algorithm:all-srcs",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/algorithmprovider:all-srcs",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/api:all-srcs",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/apis/config:all-srcs",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/apis/extender/v1:all-srcs",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/core:all-srcs",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/framework:all-srcs",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/internal/cache:all-srcs",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/internal/heap:all-srcs",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/internal/queue:all-srcs",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/listers:all-srcs",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/metrics:all-srcs",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/nodeinfo:all-srcs",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/testing:all-srcs",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/util:all-srcs",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/volumebinder:all-srcs",
    ],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
